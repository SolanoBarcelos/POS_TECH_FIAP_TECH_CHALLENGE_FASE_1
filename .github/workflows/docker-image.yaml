name: Build, Test and Push Docker Image

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: 1234
          POSTGRES_DB: db_pos_fase_1
        options: >-
          --health-cmd="pg_isready -U admin" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

    steps:
      # 1. Fazer checkout do repositório
      - name: Checkout do repositório
        uses: actions/checkout@v3

      # 2. Configurar o .NET 8
      - name: Configurar .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      # 3. Esperar o PostgreSQL estar pronto
      - name: Aguardar o PostgreSQL estar pronto
        run: |
          for i in {1..30}; do
            if pg_isready -h "localhost" -U "admin"; then
              echo "PostgreSQL está pronto!"
              break
            fi
            echo "Aguardando o PostgreSQL..."
            sleep 2
          done

      # 4. Criar a tabela "contatos" no banco de dados para teste
      - name: Criar tabela "contatos" no PostgreSQL
        run: |
          PGPASSWORD="1234" psql -h "localhost" -U "admin" -d "db_pos_fase_1" -c "
          CREATE TABLE contatos (
            id_contato int,
            nome_contato VARCHAR(100),
            telefone_contato VARCHAR(20),
            email_contato VARCHAR(100)
          );
          INSERT INTO contatos (id_contato, nome_contato, telefone_contato, email_contato) VALUES 
          ('1','Usuário Teste', '123456789', 'usuarioteste@example.com');
          "

      # 5. Restaurar dependências do projeto
      - name: Restaurar dependências
        run: dotnet restore

      # 6. Construir o projeto
      - name: Construir o projeto
        run: dotnet build --configuration Release --no-restore

      # 7. Executar os testes com a string de conexão de teste
      - name: Executar testes
        env:
          ConnectionStrings__DefaultConnection: "Host=localhost;Port=5432;Pooling=true;Database=db_pos_fase_1;User Id=admin;Password=1234;"
        run: dotnet test --no-build --verbosity normal
        working-directory: ${{ github.workspace }}/TESTES_POS_TECH_FASE_UM

      # 8. Rodar a aplicação localmente
      - name: Executar a aplicação
        run: dotnet run --no-build --configuration Release
        working-directory: ${{ github.workspace }}/POS_TECH_FASE_UM

      # 9. Fazer login no Docker Hub
      - name: Fazer login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 10. Construir a imagem Docker
      - name: Construir a imagem Docker
        run: docker build -t sfbarcelos/pos_tech_fase_um_image:latest .

      # 11. Fazer push da imagem para o Docker Hub
      - name: Fazer push da imagem para o Docker Hub
        run: docker push sfbarcelos/pos_tech_fase_um_image:latest
